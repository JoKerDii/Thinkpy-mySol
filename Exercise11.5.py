def rotate_letter(letter, n):
    """Rotates a letter by n places.  Does not change other chars.
    input:
    letter: single-letter string
    n: int
    
    output:
    single-letter string
    """
    if letter.isupper():
        start = ord('A')
    elif letter.islower():
        start = ord('a')
    else:
        return letter

    c = ord(letter) - start
    # in case that (c+n) is larger than 26, 
    # if so, the result of rotate should not exceed the alphabet range, 
    # instead, it should count to the end and restart from the first alphabet for the remaining n
    i = (c + n) % 26 + start 
    return chr(i)

def rotate_word(word, n):
    """Rotates a word by n places.
    input:
    word: string
    n: integer
    output:string
    """
    res = ''
    for letter in word:
        res += rotate_letter(letter, n)
    return res


def make_word_dict():
    """Read the words in words.txt and return a dictionary
    that contains the words as keys"""
    d = dict()
    fin = open('words.txt')
    for line in fin:
        word = line.strip().lower()
        d[word] = None

    return d


def rotate_pairs(word, word_dict):
    """Prints all words that can be generated by rotating word.

    word: string
    word_dict: dictionary with words as keys
    """
    for i in range(1, 14):
        rotated = rotate_word(word, i)
        if rotated in word_dict:
            print(word, i, rotated)


if __name__ == '__main__':
    word_dict = make_word_dict()

    for word in word_dict:
        rotate_pairs(word, word_dict)